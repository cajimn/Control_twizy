<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from sd_twizy.urdf.xacro            | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!--

Copyright (c) 2020 StreetDrone Limited
Author:  Efimia Panagiotaki

All rights reserved

-->
<robot name="sd_twizy" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <gazebo reference="chassis">
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="front_left_wheel">
    <mu1 value="0.95"/>
    <mu2 value="0.95"/>
    <minDepth>0.005</minDepth>
    <kp>1e8</kp>
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="front_right_wheel">
    <mu1 value="0.95"/>
    <mu2 value="0.95"/>
    <minDepth>0.005</minDepth>
    <kp>1e8</kp>
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="rear_left_wheel">
    <mu1 value="0.95"/>
    <mu2 value="0.95"/>
    <minDepth>0.005</minDepth>
    <kp>1e8</kp>
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo reference="rear_right_wheel">
    <mu1 value="0.95"/>
    <mu2 value="0.95"/>
    <minDepth>0.005</minDepth>
    <kp>1e8</kp>
    <material>Gazebo/Black</material>
  </gazebo>
  <link name="front_left_axle">
    <inertial>
      <mass value="1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.004" ixy="0.0" ixz="0.0" iyy="0.004" iyz="0.0" izz="0.004"/>
    </inertial>
  </link>
  <link name="front_right_axle">
    <inertial>
      <mass value="1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.004" ixy="0.0" ixz="0.0" iyy="0.004" iyz="0.0" izz="0.004"/>
    </inertial>
  </link>
  <link name="front_left_wheel">
    <inertial>
      <mass value="9.14"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.172365166667" ixy="0.0" ixz="0.0" iyy="0.172365166667" iyz="0.0" izz="0.32092825"/>
    </inertial>
    <collision name="front_left_wheel_collision">
      <geometry>
        <cylinder length="0.125" radius="0.265"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <cylinder length="0.125" radius="0.265"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
  </link>
  <link name="front_right_wheel">
    <inertial>
      <mass value="9.14"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.172365166667" ixy="0.0" ixz="0.0" iyy="0.172365166667" iyz="0.0" izz="0.32092825"/>
    </inertial>
    <collision name="front_right_wheel_collision">
      <geometry>
        <cylinder length="0.125" radius="0.265"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <cylinder length="0.125" radius="0.265"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
  </link>
  <link name="rear_left_wheel">
    <inertial>
      <mass value="10.08"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.21664272" ixy="0.0" ixz="0.0" iyy="0.21664272" iyz="0.0" izz="0.39796344"/>
    </inertial>
    <collision name="rear_left_wheel_collision">
      <geometry>
        <cylinder length="0.145" radius="0.281"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <cylinder length="0.145" radius="0.281"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
  </link>
  <link name="rear_right_wheel">
    <inertial>
      <mass value="10.08"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.21664272" ixy="0.0" ixz="0.0" iyy="0.21664272" iyz="0.0" izz="0.39796344"/>
    </inertial>
    <collision name="rear_right_wheel_collision">
      <geometry>
        <cylinder length="0.145" radius="0.281"/>
      </geometry>
    </collision>
    <visual>
      <geometry>
        <cylinder length="0.145" radius="0.281"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
  </link>
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
  </link>
  <joint name="chassis_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.843 0 0"/>
    <parent link="base_link"/>
    <child link="chassis"/>
  </joint>
  <link name="chassis">
    <inertial>
      <mass value="435"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="243.175" ixy="0" ixz="0" iyy="430.166" iyz="0" izz="430.166"/>
    </inertial>
    <visual>
      <origin rpy="0 0 1.57079632679" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:////home/efimiap2/catkin_ws/src/streetdrone_model/sd_description/meshes/SDTwizy.stl" scale="0.01 0.01 0.01"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 1.57079632679" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:////home/efimiap2/catkin_ws/src/streetdrone_model/sd_description/meshes/SDTwizy_collision.stl" scale="0.01 0.01 0.01"/>
      </geometry>
    </collision>
  </link>
  <joint name="rear_left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="rear_left_wheel"/>
    <origin rpy="1.57079633 0 0" xyz="0 -0.54 0"/>
    <axis xyz="0 0 -1"/>
  </joint>
  <joint name="rear_right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="rear_right_wheel"/>
    <origin rpy="1.57079633 0 0" xyz="0 0.54 0"/>
    <axis xyz="0 0 -1"/>
  </joint>
  <joint name="front_left_steer_joint" type="revolute">
    <parent link="base_link"/>
    <child link="front_left_axle"/>
    <origin rpy="1.57079633 0 3.14159265" xyz="1.686 -0.54 0"/>
    <axis xyz="0 1 0"/>
    <limit effort="500000" lower="-0.785398" upper="0.785398" velocity="250"/>
  </joint>
  <joint name="front_left_wheel_joint" type="continuous">
    <parent link="front_left_axle"/>
    <child link="front_left_wheel"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 -1"/>
  </joint>
  <joint name="front_right_steer_joint" type="revolute">
    <parent link="base_link"/>
    <child link="front_right_axle"/>
    <origin rpy="1.57079633 0 3.14159265" xyz="1.686 0.54 0"/>
    <axis xyz="0 1 0"/>
    <limit effort="500000" lower="-0.785398" upper="0.785398" velocity="250"/>
  </joint>
  <joint name="front_right_wheel_joint" type="continuous">
    <parent link="front_right_axle"/>
    <child link="front_right_wheel"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <axis xyz="0 0 -1"/>
  </joint>
  <joint name="velodyne_base_mount_joint" type="fixed">
    <origin rpy="0 -0.0261799387799 0" xyz="-0.681 0 1.445"/>
    <parent link="chassis"/>
    <child link="velodyne_base_link"/>
  </joint>
  <link name="velodyne_base_link">
    <inertial>
      <mass value="0.83"/>
      <origin xyz="0 0 0.03585"/>
      <inertia ixx="0.000908059425" ixy="0" ixz="0" iyy="0.000908059425" iyz="0" izz="0.0011049624"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="file:////home/efimiap2/catkin_ws/src/streetdrone_model/sd_description/meshes/VLP16_base_1.dae"/>
      </geometry>
    </visual>
    <visual>
      <geometry>
        <mesh filename="file:////home/efimiap2/catkin_ws/src/streetdrone_model/sd_description/meshes/VLP16_base_2.dae"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.03585"/>
      <geometry>
        <cylinder length="0.0717" radius="0.0516"/>
      </geometry>
    </collision>
  </link>
  <joint name="velodyne_base_scan_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.0377"/>
    <parent link="velodyne_base_link"/>
    <child link="velodyne"/>
  </joint>
  <link name="velodyne">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="1e-7" ixy="0" ixz="0" iyy="1e-7" iyz="0" izz="1e-7"/>
    </inertial>
    <visual>
      <origin xyz="0 0 -0.0377"/>
      <geometry>
        <mesh filename="file:////home/efimiap2/catkin_ws/src/streetdrone_model/sd_description/meshes/VLP16_scan.dae"/>
      </geometry>
    </visual>
  </link>
  <!-- Gazebo requires the velodyne_gazebo_plugins package -->
  <gazebo reference="velodyne">
    <sensor name="velodyne-VLP16" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1875</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159265359</min_angle>
            <max_angle>3.14159265359</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.261799387799</min_angle>
            <max_angle> 0.261799387799</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.3</min>
          <max>131.0</max>
          <resolution>0.001</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_velodyne_laser.so" name="gazebo_ros_laser_controller">
        <topicName>/points_raw</topicName>
        <frameName>velodyne</frameName>
        <min_range>0.9</min_range>
        <max_range>130.0</max_range>
        <gaussianNoise>0.008</gaussianNoise>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="front_left_camera_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0.087 0" xyz="-0.04 0.12 1.3"/>
    <parent link="chassis"/>
    <child link="front_left_camera_link"/>
  </joint>
  <!-- Camera -->
  <link name="front_left_camera_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.026 0.026 0.0203"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.026 0.026 0.0203"/>
      </geometry>
      <material name="red"/>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
         so that ros and opencv can operate on the camera frame correctly -->
  <joint name="front_left_camera_optical_joint" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
           won't be aligned properly with the frame it is supposedly originating from -->
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="front_left_camera_link"/>
    <child link="front_left_camera_link_optical"/>
  </joint>
  <link name="front_left_camera_link_optical"/>
  <gazebo reference="front_left_camera_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
    <sensor name="front_left_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>2.09</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1200</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>30</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="front_left_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>sd_twizy/front_left_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>front_left_camera_link_optical</frameName>
        <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
               between the gazebo sensor image and the frame it is supposed to
               be attached to -->
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="front_right_camera_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0.087 0" xyz="-0.04 -0.12 1.3"/>
    <parent link="chassis"/>
    <child link="front_right_camera_link"/>
  </joint>
  <!-- Camera -->
  <link name="front_right_camera_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.026 0.026 0.0203"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.026 0.026 0.0203"/>
      </geometry>
      <material name="red"/>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
         so that ros and opencv can operate on the camera frame correctly -->
  <joint name="front_right_camera_optical_joint" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
           won't be aligned properly with the frame it is supposedly originating from -->
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="front_right_camera_link"/>
    <child link="front_right_camera_link_optical"/>
  </joint>
  <link name="front_right_camera_link_optical"/>
  <gazebo reference="front_right_camera_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
    <sensor name="front_right_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>2.09</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1200</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>30</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="front_right_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>sd_twizy/front_right_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>front_right_camera_link_optical</frameName>
        <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
               between the gazebo sensor image and the frame it is supposed to
               be attached to -->
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="front_center_camera_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0.087 0" xyz="-0.04 0 1.3"/>
    <parent link="chassis"/>
    <child link="front_center_camera_link"/>
  </joint>
  <!-- Camera -->
  <link name="front_center_camera_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.026 0.026 0.0203"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.026 0.026 0.0203"/>
      </geometry>
      <material name="red"/>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
         so that ros and opencv can operate on the camera frame correctly -->
  <joint name="front_center_camera_optical_joint" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
           won't be aligned properly with the frame it is supposedly originating from -->
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="front_center_camera_link"/>
    <child link="front_center_camera_link_optical"/>
  </joint>
  <link name="front_center_camera_link_optical"/>
  <gazebo reference="front_center_camera_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
    <sensor name="front_center_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>2.09</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1200</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>30</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="front_center_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>sd_twizy/front_center_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>front_center_camera_link_optical</frameName>
        <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
               between the gazebo sensor image and the frame it is supposed to
               be attached to -->
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="rear_center_camera_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0.2618 3.14" xyz="-1.26 0 1.28"/>
    <parent link="chassis"/>
    <child link="rear_center_camera_link"/>
  </joint>
  <!-- Camera -->
  <link name="rear_center_camera_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.026 0.026 0.0203"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.026 0.026 0.0203"/>
      </geometry>
      <material name="red"/>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
         so that ros and opencv can operate on the camera frame correctly -->
  <joint name="rear_center_camera_optical_joint" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
           won't be aligned properly with the frame it is supposedly originating from -->
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="rear_center_camera_link"/>
    <child link="rear_center_camera_link_optical"/>
  </joint>
  <link name="rear_center_camera_link_optical"/>
  <gazebo reference="rear_center_camera_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
    <sensor name="rear_center_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>2.09</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1200</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>30</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="rear_center_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>sd_twizy/rear_center_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>rear_center_camera_link_optical</frameName>
        <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
               between the gazebo sensor image and the frame it is supposed to
               be attached to -->
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="right_forward_camera_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0.244 -1.12" xyz="-0.95 -0.42 1.2"/>
    <parent link="chassis"/>
    <child link="right_forward_camera_link"/>
  </joint>
  <!-- Camera -->
  <link name="right_forward_camera_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.026 0.026 0.0203"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.026 0.026 0.0203"/>
      </geometry>
      <material name="red"/>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
         so that ros and opencv can operate on the camera frame correctly -->
  <joint name="right_forward_camera_optical_joint" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
           won't be aligned properly with the frame it is supposedly originating from -->
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="right_forward_camera_link"/>
    <child link="right_forward_camera_link_optical"/>
  </joint>
  <link name="right_forward_camera_link_optical"/>
  <gazebo reference="right_forward_camera_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
    <sensor name="right_forward_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>2.09</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1200</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>30</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="right_forward_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>sd_twizy/right_forward_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>right_forward_camera_link_optical</frameName>
        <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
               between the gazebo sensor image and the frame it is supposed to
               be attached to -->
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="right_rearward_camera_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0.244 -2.18" xyz="-1.05 -0.42 1.2"/>
    <parent link="chassis"/>
    <child link="right_rearward_camera_link"/>
  </joint>
  <!-- Camera -->
  <link name="right_rearward_camera_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.026 0.026 0.0203"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.026 0.026 0.0203"/>
      </geometry>
      <material name="red"/>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
         so that ros and opencv can operate on the camera frame correctly -->
  <joint name="right_rearward_camera_optical_joint" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
           won't be aligned properly with the frame it is supposedly originating from -->
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="right_rearward_camera_link"/>
    <child link="right_rearward_camera_link_optical"/>
  </joint>
  <link name="right_rearward_camera_link_optical"/>
  <gazebo reference="right_rearward_camera_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
    <sensor name="right_rearward_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>2.09</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1200</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>30</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="right_rearward_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>sd_twizy/right_rearward_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>right_rearward_camera_link_optical</frameName>
        <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
               between the gazebo sensor image and the frame it is supposed to
               be attached to -->
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="left_forward_camera_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0.2967 1.12" xyz="-0.95 0.4 1.2"/>
    <parent link="chassis"/>
    <child link="left_forward_camera_link"/>
  </joint>
  <!-- Camera -->
  <link name="left_forward_camera_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.026 0.026 0.0203"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.026 0.026 0.0203"/>
      </geometry>
      <material name="red"/>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
         so that ros and opencv can operate on the camera frame correctly -->
  <joint name="left_forward_camera_optical_joint" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
           won't be aligned properly with the frame it is supposedly originating from -->
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="left_forward_camera_link"/>
    <child link="left_forward_camera_link_optical"/>
  </joint>
  <link name="left_forward_camera_link_optical"/>
  <gazebo reference="left_forward_camera_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
    <sensor name="left_forward_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>2.09</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1200</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>30</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="left_forward_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>sd_twizy/left_forward_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>left_forward_camera_link_optical</frameName>
        <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
               between the gazebo sensor image and the frame it is supposed to
               be attached to -->
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="left_rearward_camera_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0.2967 2.18" xyz="-1.05 0.39 1.2"/>
    <parent link="chassis"/>
    <child link="left_rearward_camera_link"/>
  </joint>
  <!-- Camera -->
  <link name="left_rearward_camera_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.026 0.026 0.0203"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.026 0.026 0.0203"/>
      </geometry>
      <material name="red"/>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
         so that ros and opencv can operate on the camera frame correctly -->
  <joint name="left_rearward_camera_optical_joint" type="fixed">
    <!-- these values have to be these values otherwise the gazebo camera image
           won't be aligned properly with the frame it is supposedly originating from -->
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="left_rearward_camera_link"/>
    <child link="left_rearward_camera_link_optical"/>
  </joint>
  <link name="left_rearward_camera_link_optical"/>
  <gazebo reference="left_rearward_camera_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material>Gazebo/Red</material>
    <sensor name="left_rearward_camera" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>2.09</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1200</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>30</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="left_rearward_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>sd_twizy/left_rearward_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>left_rearward_camera_link_optical</frameName>
        <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
               between the gazebo sensor image and the frame it is supposed to
               be attached to -->
        <hackBaseline>0.0</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0.0</focalLength>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libSdControlPlugin.so" name="sd_control">
      <chassis>base_link</chassis>
      <front_left_wheel>front_left_wheel_joint</front_left_wheel>
      <front_right_wheel>front_right_wheel_joint</front_right_wheel>
      <front_left_wheel_steering>front_left_steer_joint</front_left_wheel_steering>
      <front_right_wheel_steering>front_right_steer_joint</front_right_wheel_steering>
      <back_left_wheel>rear_left_wheel_joint</back_left_wheel>
      <back_right_wheel>rear_right_wheel_joint</back_right_wheel>
      <fl_wheel_steering_p_gain>1e4</fl_wheel_steering_p_gain>
      <fr_wheel_steering_p_gain>1e4</fr_wheel_steering_p_gain>
      <fl_wheel_steering_i_gain>0</fl_wheel_steering_i_gain>
      <fr_wheel_steering_i_gain>0</fr_wheel_steering_i_gain>
      <fl_wheel_steering_d_gain>3e2</fl_wheel_steering_d_gain>
      <fr_wheel_steering_d_gain>3e2</fr_wheel_steering_d_gain>
      <max_speed>22</max_speed>
      <max_torque>250</max_torque>
      <front_brake_torque>260</front_brake_torque>
      <back_brake_torque>260</back_brake_torque>
      <chassis_aero_force_gain>0.63045</chassis_aero_force_gain>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_p3d.so" name="p3d">
      <bodyName>base_link</bodyName>
      <topicName>base_pose_ground_truth</topicName>
      <frameName>map</frameName>
      <updateRate>100.0</updateRate>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_joint_state_publisher.so" name="joint_state_publisher">
      <robotNamespace>/sd_twizy</robotNamespace>
      <jointName>front_left_wheel_joint, front_right_wheel_joint, front_left_steer_joint, front_right_steer_joint, rear_left_wheel_joint, rear_right_wheel_joint</jointName>
      <updateRate>100.0</updateRate>
      <alwaysOn>true</alwaysOn>
    </plugin>
  </gazebo>
</robot>
